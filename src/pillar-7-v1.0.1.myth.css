/*!  Pillar v1.0.1  -  CSS Grids simplified (7 pillars/columns)
Copyright â“’ 2015 Rogier Spieker (Konfirm). All rights reserved.
Licensed under the MIT License.
*//*
	Inspired by the awesome Pure CSS framework (http://purecss.io)
*/

:root {
	--column-count: 7;
	--column-width: calc(100% / var(--column-count));
}

/*  The default 'column' width and display mode  */
[class *= "pllr7"] > *,
[class *= "pllr"] > * {
	display: inline-block;
	*display: inline; /*  IE < 8: fake inline-block  */
	zoom: 1;
	width: calc(var(--column-width) * 1);
}

/*  The 'row' will be using the flex display mode  */
[class *= "pllr"] {
	display: flex;
	flex-flow: row wrap;
	text-rendering: optimizespeed; /* Webkit: fixes text-rendering: optimizeLegibility */
}

/*  The generated pillars/columns/grid  */

.pllr--2-5         > :nth-child(2n+1),
.pllr--2-4-1       > :nth-child(3n+1),
.pllr--2-3-2       > :nth-child(3n+1),
.pllr--2-3-1-1     > :nth-child(4n+1),
.pllr--2-2-3       > :nth-child(3n+1),
.pllr--2-2-2-1     > :nth-child(4n+1),
.pllr--2-2-1-2     > :nth-child(4n+1),
.pllr--2-2-1-1-1   > :nth-child(5n+1),
.pllr--2-1-4       > :nth-child(3n+1),
.pllr--2-1-3-1     > :nth-child(4n+1),
.pllr--2-1-2-2     > :nth-child(4n+1),
.pllr--2-1-2-1-1   > :nth-child(5n+1),
.pllr--2-1-1-3     > :nth-child(4n+1),
.pllr--2-1-1-2-1   > :nth-child(5n+1),
.pllr--2-1-1-1-2   > :nth-child(5n+1),
.pllr--2-1-1-1-1-1 > :nth-child(6n+1),
.pllr--5-2         > :nth-child(2n+2),
.pllr--4-2-1       > :nth-child(3n+2),
.pllr--3-2-2       > :nth-child(3n+2),
.pllr--3-2-1-1     > :nth-child(4n+2),
.pllr--2-2-3       > :nth-child(3n+2),
.pllr--2-2-2-1     > :nth-child(4n+2),
.pllr--2-2-1-2     > :nth-child(4n+2),
.pllr--2-2-1-1-1   > :nth-child(5n+2),
.pllr--1-2-4       > :nth-child(3n+2),
.pllr--1-2-3-1     > :nth-child(4n+2),
.pllr--1-2-2-2     > :nth-child(4n+2),
.pllr--1-2-2-1-1   > :nth-child(5n+2),
.pllr--1-2-1-3     > :nth-child(4n+2),
.pllr--1-2-1-2-1   > :nth-child(5n+2),
.pllr--1-2-1-1-2   > :nth-child(5n+2),
.pllr--1-2-1-1-1-1 > :nth-child(6n+2),
.pllr--4-1-2       > :nth-child(3n+3),
.pllr--3-2-2       > :nth-child(3n+3),
.pllr--3-1-2-1     > :nth-child(4n+3),
.pllr--2-3-2       > :nth-child(3n+3),
.pllr--2-2-2-1     > :nth-child(4n+3),
.pllr--2-1-2-2     > :nth-child(4n+3),
.pllr--2-1-2-1-1   > :nth-child(5n+3),
.pllr--1-4-2       > :nth-child(3n+3),
.pllr--1-3-2-1     > :nth-child(4n+3),
.pllr--1-2-2-2     > :nth-child(4n+3),
.pllr--1-2-2-1-1   > :nth-child(5n+3),
.pllr--1-1-2-3     > :nth-child(4n+3),
.pllr--1-1-2-2-1   > :nth-child(5n+3),
.pllr--1-1-2-1-2   > :nth-child(5n+3),
.pllr--1-1-2-1-1-1 > :nth-child(6n+3),
.pllr--3-1-1-2     > :nth-child(4n+4),
.pllr--2-2-1-2     > :nth-child(4n+4),
.pllr--2-1-2-2     > :nth-child(4n+4),
.pllr--2-1-1-2-1   > :nth-child(5n+4),
.pllr--1-3-1-2     > :nth-child(4n+4),
.pllr--1-2-2-2     > :nth-child(4n+4),
.pllr--1-2-1-2-1   > :nth-child(5n+4),
.pllr--1-1-3-2     > :nth-child(4n+4),
.pllr--1-1-2-2-1   > :nth-child(5n+4),
.pllr--1-1-1-2-2   > :nth-child(5n+4),
.pllr--1-1-1-2-1-1 > :nth-child(6n+4),
.pllr--2-1-1-1-2   > :nth-child(5n+5),
.pllr--1-2-1-1-2   > :nth-child(5n+5),
.pllr--1-1-2-1-2   > :nth-child(5n+5),
.pllr--1-1-1-2-2   > :nth-child(5n+5),
.pllr--1-1-1-1-2-1 > :nth-child(6n+5),
.pllr--1-1-1-1-1-2 > :nth-child(6n+6) {
	width: calc(var(--column-width) * 2);
}


.pllr--3-4       > :nth-child(2n+1),
.pllr--3-3-1     > :nth-child(3n+1),
.pllr--3-2-2     > :nth-child(3n+1),
.pllr--3-2-1-1   > :nth-child(4n+1),
.pllr--3-1-3     > :nth-child(3n+1),
.pllr--3-1-2-1   > :nth-child(4n+1),
.pllr--3-1-1-2   > :nth-child(4n+1),
.pllr--3-1-1-1-1 > :nth-child(5n+1),
.pllr--4-3       > :nth-child(2n+2),
.pllr--3-3-1     > :nth-child(3n+2),
.pllr--2-3-2     > :nth-child(3n+2),
.pllr--2-3-1-1   > :nth-child(4n+2),
.pllr--1-3-3     > :nth-child(3n+2),
.pllr--1-3-2-1   > :nth-child(4n+2),
.pllr--1-3-1-2   > :nth-child(4n+2),
.pllr--1-3-1-1-1 > :nth-child(5n+2),
.pllr--3-1-3     > :nth-child(3n+3),
.pllr--2-2-3     > :nth-child(3n+3),
.pllr--2-1-3-1   > :nth-child(4n+3),
.pllr--1-3-3     > :nth-child(3n+3),
.pllr--1-2-3-1   > :nth-child(4n+3),
.pllr--1-1-3-2   > :nth-child(4n+3),
.pllr--1-1-3-1-1 > :nth-child(5n+3),
.pllr--2-1-1-3   > :nth-child(4n+4),
.pllr--1-2-1-3   > :nth-child(4n+4),
.pllr--1-1-2-3   > :nth-child(4n+4),
.pllr--1-1-1-3-1 > :nth-child(5n+4),
.pllr--1-1-1-1-3 > :nth-child(5n+5) {
	width: calc(var(--column-width) * 3);
}


.pllr--4-3     > :nth-child(2n+1),
.pllr--4-2-1   > :nth-child(3n+1),
.pllr--4-1-2   > :nth-child(3n+1),
.pllr--4-1-1-1 > :nth-child(4n+1),
.pllr--3-4     > :nth-child(2n+2),
.pllr--2-4-1   > :nth-child(3n+2),
.pllr--1-4-2   > :nth-child(3n+2),
.pllr--1-4-1-1 > :nth-child(4n+2),
.pllr--2-1-4   > :nth-child(3n+3),
.pllr--1-2-4   > :nth-child(3n+3),
.pllr--1-1-4-1 > :nth-child(4n+3),
.pllr--1-1-1-4 > :nth-child(4n+4) {
	width: calc(var(--column-width) * 4);
}


.pllr--5-2   > :nth-child(2n+1),
.pllr--5-1-1 > :nth-child(3n+1),
.pllr--2-5   > :nth-child(2n+2),
.pllr--1-5-1 > :nth-child(3n+2),
.pllr--1-1-5 > :nth-child(3n+3) {
	width: calc(var(--column-width) * 5);
}


.pllr--6-1 > :nth-child(2n+1),
.pllr--1-6 > :nth-child(2n+2) {
	width: calc(var(--column-width) * 6);
}

