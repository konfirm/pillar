/*!  Pillar v0.1  -  Grid system (6 columns)
Copyright â“’ 2015 Konfirm. All rights reserved
Licensed under the MIT License.
*//*
	Inspired by the awesome Pure CSS framework (http://purecss.io)
*/

:root {
	--column-count: 6;
	--column-width: calc(100% / var(--column-count));
}

/*  The default 'column' width and display mode  */
[class *= "grid"] > * {
	display: inline-block;
    *display: inline; /*  IE < 8: fake inline-block  */
    zoom: 1;
	width: calc(var(--column-width) * 1);
}
/*  The 'row' will be using the flex display mode  */
[class *= "grid"] {
	display: flex;
	flex-flow: row wrap;
    text-rendering: optimizespeed; /* Webkit: fixes text-rendering: optimizeLegibility */
}

.grid--2-4       > :nth-child(2n+1),
.grid--2-3-1     > :nth-child(3n+1),
.grid--2-1-3     > :nth-child(3n+1),
.grid--2-2-2     > :nth-child(3n+1),
.grid--2-1-1-2   > :nth-child(4n+1),
.grid--2-1-2-1   > :nth-child(4n+1),
.grid--2-2-1-1   > :nth-child(4n+1),
.grid--2-1-1-1-1 > :nth-child(5n+1),
.grid--4-2       > :nth-child(2n+2),
.grid--3-2-1     > :nth-child(3n+2),
.grid--2-2-2     > :nth-child(3n+2),
.grid--1-2-3     > :nth-child(3n+2),
.grid--1-2-2-1   > :nth-child(4n+2),
.grid--1-2-1-2   > :nth-child(4n+2),
.grid--2-2-1-1   > :nth-child(4n+2),
.grid--1-2-1-1-1 > :nth-child(5n+2),
.grid--3-1-2     > :nth-child(3n+3),
.grid--1-3-2     > :nth-child(3n+3),
.grid--2-2-2     > :nth-child(3n+3),
.grid--2-1-2-1   > :nth-child(4n+3),
.grid--1-1-2-2   > :nth-child(4n+3),
.grid--1-2-2-1   > :nth-child(4n+3),
.grid--1-1-2-1-1 > :nth-child(5n+3),
.grid--1-1-2-2   > :nth-child(4n+4),
.grid--1-2-1-2   > :nth-child(4n+4),
.grid--2-1-1-2   > :nth-child(4n+4),
.grid--1-1-1-2-1 > :nth-child(5n+4),
.grid--1-1-1-1-2 > :nth-child(5n+5){
	width: calc(var(--column-width) * 2);
}

.grid--3-3     > :nth-child(2n+1),
.grid--3-1-2   > :nth-child(3n+1),
.grid--3-2-1   > :nth-child(3n+1),
.grid--3-1-1-1 > :nth-child(4n+1),
.grid--3-3     > :nth-child(2n+2),
.grid--2-3-1   > :nth-child(3n+2),
.grid--1-3-2   > :nth-child(3n+2),
.grid--1-3-1-1 > :nth-child(4n+2),
.grid--1-2-3   > :nth-child(3n+3),
.grid--2-1-3   > :nth-child(3n+3),
.grid--1-1-3-1 > :nth-child(4n+3),
.grid--1-1-1-3 > :nth-child(4n+4){
	width: calc(var(--column-width) * 3);
}

.grid--4-2   > :nth-child(2n+1),
.grid--4-1-1 > :nth-child(3n+1),
.grid--2-4   > :nth-child(2n+2),
.grid--1-4-1 > :nth-child(3n+2),
.grid--1-1-4 > :nth-child(3n+3){
	width: calc(var(--column-width) * 4);
}

.grid--5-1 > :nth-child(2n+1),
.grid--1-5 > :nth-child(2n+2){
	width: calc(var(--column-width) * 5);
}

